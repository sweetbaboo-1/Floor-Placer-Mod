plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url "https://masa.dy.fi/maven" }
	maven { url "https://maven.kikugie.dev/third-party"} // for Litematica
	exclusiveContent { // for Syncmatica
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Litematica stuff
	include(implementation "net.sandrohc:schematic4j:1.1.0")
	modImplementation "carpet:fabric-carpet:${project.carpet_version}"
	modImplementation(fabricApi.module("fabric-command-api-v2", project.fabric_version))
	modImplementation(fabricApi.module("fabric-registry-sync-v0", project.fabric_version))

	// Testing
	modRuntimeOnly "maven.modrinth:syncmatica:1.20.1-0.3.11"
	modRuntimeOnly "fi.dy.masa:litematica:0.15.3+1.20.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	// Include the LICENSE file and rename it
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}


// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {

	}
}
